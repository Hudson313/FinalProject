@model IEnumerable<TeamApolloFinal.Models.Apollo>
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <style>
        #owl-demo .item {
            margin: 3px;
        }

            #owl-demo .item img {
                display: block;
                width: 100%;
                height: auto;
            }
    </style>
    <!-- Important Owl stylesheet -->

    <link href="~/Content/OwlCarousel/owl.carousel.css" rel="stylesheet" />


    <!-- Default Theme -->

    <link href="~/Content/OwlCarousel/owl.theme.css" rel="stylesheet" />

    <!--  jQuery 1.7+  -->

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <!-- Include js plugin -->

    <script src="~/Scripts/owl.carousel.min.js"></script>

    <script>
        var quotes = [];

        @foreach(var quote in Model) {
            <text>
                quotes.push(`@quote.Motivation`);
            </text>
        }

        
        //Loop for random quote
        function display() {
            document.getElementById("quoteDiv").innerHTML = quotes[0];
        }
    </script>
</head>

<body>
    @*@*Quotes*@

    <button onclick="display()">Click Me</button>
    <div id="quoteDiv">Some text</div>



    @*@foreach (var quotes in Model)
    {
        <div>
            @Html.DisplayFor(modelItem => quotes.Motivation)
        </div>
    }*@

    <div id="owl-demo">

        <div class="item"><a href="https://www.github.com" target="_blank"><img src="~/Content/Images/github.jpg" alt="Owl Image"></a></div>
        <div class="item"><img src="~/Content/Images/EdX.jpg" alt="Owl Image"></div>
        <div class="item"><a href="https://social.msdn.microsoft.com/search/en-US" target="_blank"><img src="~/Content/Images/MDSN.jpg" alt="Owl Image"></div>
        <div class="item"><a href="http://www.w3schools.com/" target="_blank"><img src="~/Content/Images/W3Schools.jpg" alt="Owl Image"></div>
        <div class="item"><a href="https://www.codecademy.com/" target="_blank"><img src="~/Content/Images/Codeacademy.jpg" alt="Owl Image"></div>
        <div class="item"><a href="https://www.reddit.com/r/learnprogramming/" target="_blank"><img src="~/Content/Images/Reddit.jpg" alt="Owl Image"></div>
        <div class="item"><a href="http://stackoverflow.com/" target="_blank"><img src="~/Content/Images/StackOverflow.jpg" alt="Owl Image"></div>
        <div class="item"><a href="https://www.edx.org/course/subject/computer-science" target="_blank"><img src="~/Content/Images/EdX.jpg" alt="Owl Image"></div>
        <div class="item"><a href="https://www.khanacademy.org/computing/computer-programming" target="_blank"><img src="~/Content/Images/KhanAcademy.jpg" alt="Owl Image"></div>
        <div class="item"><a href="http://lifehacker.com/" target="_blank"><img src="~/Content/Images/LifeHacker.jpg" alt="Owl Image"></div>



    </div>

    <script>
        $(document).ready(function () {

    $("#owl-demo").owlCarousel({

        autoPlay: 3000, //Set AutoPlay to 3 seconds

        items: 4,
        itemsDesktop: [1199, 3],
        itemsDesktopSmall: [979, 3]

    });

});
    </script>
    @*Twitter widget*@
    <a class="twitter-timeline" href="https://twitter.com/ASG_Launchpad">Tweets by ASG_Launchpad</a>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

    @*Youtube API*@
    @*1. The <iframe> (and video player) will replace this <div> tag.*@
    <div id="player"></div>
    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          playerVars:
              {
                  listType: 'playlist',
                  // Insert Playlist ID
                  list: 'PLzVFFIhPmg2TOc34Vcsst4ZzTpSGdLaUo'
              }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>
</body>
</html>
